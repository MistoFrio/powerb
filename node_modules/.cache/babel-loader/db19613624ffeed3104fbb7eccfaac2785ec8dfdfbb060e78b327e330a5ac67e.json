{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Desktop\\\\src\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\n\nimport React, { useEffect, useState } from 'react';\nimport supabase from '../services/supabase'; // Importando o cliente Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dashboards, setDashboards] = useState([]);\n  useEffect(() => {\n    const fetchDashboards = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('dashboards').select('id, nome, descricao, link_power_bi').eq('user_id', supabase.auth.user().id); // Ajuste para pegar dashboards do usuário logado.\n\n      if (error) {\n        alert('Erro ao buscar dashboards: ' + error.message);\n      } else {\n        setDashboards(data);\n      }\n    };\n    fetchDashboards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dashboards.map(dashboard => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: dashboard.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: dashboard.descricao\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: dashboard.link_power_bi,\n        width: \"600\",\n        height: \"400\",\n        title: dashboard.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, dashboard.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qgHegW6yJqdG1FZlKfHnFEDsklI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","Dashboard","_s","dashboards","setDashboards","fetchDashboards","data","error","from","select","eq","auth","user","id","alert","message","children","map","dashboard","nome","fileName","_jsxFileName","lineNumber","columnNumber","descricao","src","link_power_bi","width","height","title","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Desktop/src/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport supabase from '../services/supabase'; // Importando o cliente Supabase\r\n\r\nconst Dashboard = () => {\r\n  const [dashboards, setDashboards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDashboards = async () => {\r\n      const { data, error } = await supabase\r\n        .from('dashboards')\r\n        .select('id, nome, descricao, link_power_bi')\r\n        .eq('user_id', supabase.auth.user().id); // Ajuste para pegar dashboards do usuário logado.\r\n\r\n      if (error) {\r\n        alert('Erro ao buscar dashboards: ' + error.message);\r\n      } else {\r\n        setDashboards(data);\r\n      }\r\n    };\r\n\r\n    fetchDashboards();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {dashboards.map((dashboard) => (\r\n        <div key={dashboard.id}>\r\n          <h3>{dashboard.nome}</h3>\r\n          <p>{dashboard.descricao}</p>\r\n          <iframe\r\n            src={dashboard.link_power_bi}\r\n            width=\"600\"\r\n            height=\"400\"\r\n            title={dashboard.nome}\r\n          ></iframe>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMT,QAAQ,CACnCU,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,CAAC,oCAAoC,CAAC,CAC5CC,EAAE,CAAC,SAAS,EAAEZ,QAAQ,CAACa,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC;;MAE3C,IAAIN,KAAK,EAAE;QACTO,KAAK,CAAC,6BAA6B,GAAGP,KAAK,CAACQ,OAAO,CAAC;MACtD,CAAC,MAAM;QACLX,aAAa,CAACE,IAAI,CAAC;MACrB;IACF,CAAC;IAEDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,EACGb,UAAU,CAACc,GAAG,CAAEC,SAAS,iBACxBlB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKE,SAAS,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBvB,OAAA;QAAAgB,QAAA,EAAIE,SAAS,CAACM;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BvB,OAAA;QACEyB,GAAG,EAAEP,SAAS,CAACQ,aAAc;QAC7BC,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZC,KAAK,EAAEX,SAAS,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA,GARFL,SAAS,CAACL,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}